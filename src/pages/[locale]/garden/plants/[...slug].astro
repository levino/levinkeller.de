---
import { getCollection, render } from 'astro:content'
import Layout from '@levino/shipyard-base/layouts/Page.astro'
import { Effect, Array as EffectArray, Exit, pipe } from 'effect'
import { flatten } from 'ramda'
import { Plant } from '@/components/garden/Plant'
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const plants = await getCollection('plants')
  return flatten(
    plants.map((entry) =>
      ['en', 'de'].map((locale) => ({
        params: { slug: entry.id, locale },
        props: { entry },
      }))
    )
  )
}
// 2. For your template, you can get the entry directly from the prop
const { entry: plant } = Astro.props
const getDescription = pipe(
  Effect.tryPromise(() =>
    getCollection(
      'plantDescriptions',
      (entry) => entry.data.plant.id === plant.id
    )
  ),
  Effect.flatMap(EffectArray.head),
  Effect.flatMap((description) => Effect.tryPromise(() => render(description))),
  Effect.map(({ Content }) => Content)
)

const Description = await Effect.runPromiseExit(getDescription)
---

<Layout>
  <div class="mx-auto max-w-3xl">
    <Plant plant={plant} />
    {
      Exit.isSuccess(Description) ? (
        <Description.value />
      ) : (
        <p>There is no description for this plant yet.</p>
      )
    }
  </div>
</Layout>
